"select FRANCHID, YEARID, W, G, kpi as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as kpi
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df1)
df2 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select * from teamsfranchises"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df2)
df3 <- inner_join(df1, df2, by = "FRANCHID")
df4 <- filter (df3, ACTIVE == "Y") %>% filter (YEARID >= "2000")
df4[4] <- round(df[4], 2)
View(df4)
ggplot() +
coord_cartesian()  +
scale_x_discrete() +
labs(title='Team Record/nTotal Wins') +
labs(x=paste("Franchise ID"), y=paste("Year")) +
layer(data=df4,
mapping=aes(x=FRANCHID, y=YEARID, label=W),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df4,
mapping=aes(x=FRANCHID, y=YEARID, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
ggplot() +
coord_cartesian()  +
scale_x_discrete() +
labs(title='Team Record\nTotal Wins') +
labs(x=paste("Franchise ID"), y=paste("Year")) +
layer(data=df4,
mapping=aes(x=FRANCHID, y=YEARID, label=W),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df4,
mapping=aes(x=FRANCHID, y=YEARID, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(tidyr)
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, wins/games as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as wins/games
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df1)
df2 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select * from teamsfranchises"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df2)
df3 <- inner_join(df1, df2, by = "FRANCHID")
df4 <- filter (df3, ACTIVE == "Y") %>% filter (YEARID >= "2000")
df4[4] <- round(df[4], 2)
View(df4)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(tidyr)
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, wins/games as ratio,
case
when wins/games > "p1" then \\\'Winning Record\\\'
when wins/games > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end wins/games from
(select FRANCHID, YEARID, w, G, w / G as wins/games
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df1)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(tidyr)
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, kpi as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as kpi
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df1)
df2 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select * from teamsfranchises"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
))); View(df2)
df3 <- inner_join(df1, df2, by = "FRANCHID")
df4 <- filter (df3, ACTIVE == "Y") %>% filter (YEARID >= "2000")
df4[4] <- round(df[4], 2)
View(df4)
ggplot() +
coord_cartesian()  +
scale_x_discrete() +
labs(title='Team Record\nTotal Wins\nKPI = Wins/Games') +
labs(x=paste("Franchise ID"), y=paste("Year")) +
layer(data=df4,
mapping=aes(x=FRANCHID, y=YEARID, label=W),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df4,
mapping=aes(x=FRANCHID, y=YEARID, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
shiny::runApp('C:/DataViz/6. Final Project/DV_FinalProject/04Shiny')
shiny::runApp('C:/DataViz/6. Final Project/DV_FinalProject/04Shiny')
shiny::runApp('C:/DataViz/6. Final Project/DV_FinalProject/04Shiny')
# server.R
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(leaflet)
require(DT)
require(extrafont)
library(reshape2)
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, kpi as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as kpi
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
df2 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select * from teamsfranchises"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
df3 <- inner_join(df1, df2, by = "FRANCHID")
df4 <- filter (df3, ACTIVE == "Y") %>% filter (YEARID >= "2000")
df4[4] <- round(df[4], 2)
View (df4)
# server.R
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(leaflet)
require(DT)
require(extrafont)
library(reshape2)
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, kpi as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as kpi
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
# server.R
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(leaflet)
require(DT)
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, kpi as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as kpi
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
df2 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select * from teamsfranchises"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
df3 <- inner_join(df1, df2, by = "FRANCHID")
df4 <- filter (df3, ACTIVE == "Y") %>% filter (YEARID >= "2000")
df4[4] <- round(df[4], 2)
View(df4)
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('C:/DataViz/DrCannata/RWorkshop/09 Shiny/03Dashboard')
shiny::runApp('04Shiny')
# server.R
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(leaflet)
require(DT)
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_High_Max_value = .6
KPI_Medium_Max_value = .4
df1 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select FRANCHID, YEARID, W, G, kpi as ratio,
case
when kpi > "p1" then \\\'Winning Record\\\'
when kpi > "p2" then \\\'Average Record\\\'
else \\\'Losing Record\\\'
end kpi from
(select FRANCHID, YEARID, w, G, w / G as kpi
from teams)"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
df2 <-
data.frame(fromJSON(getURL(
URLencode(
gsub(
"\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select * from teamsfranchises"
'
)
), httpheader = c(
DB = 'jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl',
USER =
'C##cs329e_btb687', PASS = 'orcl_btb687', MODE = 'native_mode',
MODEL =
'model', returnDimensions = 'False', returnFor = 'JSON',
p1 = KPI_High_Max_value, p2 =
KPI_Medium_Max_value
), verbose = TRUE
)));
df3 <- inner_join(df1, df2, by = "FRANCHID")
df4 <- filter (df3, ACTIVE == "Y") %>% filter (YEARID >= "2000")
df4[4] <- round(df[4], 2)
shinyServer(function(input, output) {
KPI_High_Max_value <- reactive({input$KPI1})
KPI_Medium_Max_value <- reactive({input$KPI2})
rv <- reactiveValues(alpha = 0.50)
observeEvent(input$light, { rv$alpha <- 0.50 })
observeEvent(input$dark, { rv$alpha <- 0.75 })
df <- eventReactive(input$clicks1, {df4
})
output$distPlot1 <- renderPlot({
plot <- ggplot() +
coord_cartesian()  +
scale_x_discrete() +
labs(title='Team Record\nTotal Wins\nKPI = Wins/Games') +
labs(x=paste("Franchise ID"), y=paste("Year")) +
layer(data=df(),
mapping=aes(x=FRANCHID, y=YEARID, label=W),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=df(),
mapping=aes(x=FRANCHID, y=YEARID, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
plot
})
observeEvent(input$clicks, {
print(as.numeric(input$clicks))
})
})
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
shiny::runApp('04Shiny')
